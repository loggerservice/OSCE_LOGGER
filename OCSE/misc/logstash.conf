input {
s3 {
      access_key_id => "AKIAIVN6OTPIDLH6VXKA"
      bucket => "logfile-created"
      region => "us-west-2"
      secret_access_key => "ndILGCyBIcwTtS4frggjZn8eBQ8E/VABVifoZRKd"
      prefix => "mylog"
      type => "s3"
    }
  }
 
filter {
  #If log line contains tab character followed by 'at' then we will tag that entry as stacktrace
  if [message] =~ "\tat" {
    grok {
      match => ["message", "^(\tat)"]
      add_tag => ["stacktrace"]
    }
  }

  #Grokking Spring Boot's default log format
  
  grok 
  {
	 match => ["message", "%{TIMESTAMP_ISO8601:Date} %{GREEDYDATA:Log_Level} %{GREEDYDATA:Port_Id} --- %{GREEDYDATA:Thread} %{GREEDYDATA:Class} : %{GREEDYDATA:Message}"]
  }
  
   json {
    source => "Message"
  }
  
  mutate 
  { 
	add_field => { "show" => "This data will be in the output" }
	remove_field => [ "message" ]
  }
  
}

  
 
output {
   
  stdout {
    codec => rubydebug
  }
  
	#file {
     # path => "C:/Users/kdheeraj/Documents/Elasticsearch/logstash-7.0.1/logs/output.log"    
   #}
 
  # Sending properly parsed log events to elasticsearch
  elasticsearch {
    hosts => ["localhost:9200"]
	#index => "OSCE-%{+YYYY.MM.dd}"
  }
}